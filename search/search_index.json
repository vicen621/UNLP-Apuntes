{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UNLP Apuntes","text":"<p>Apuntes tomados por Vicente Garc\u00eda Mart\u00ed durante sus estudios de la carrera Licenciatura en analisis de sistemas en la Universidad Nacional de La Plata</p>"},{"location":"1er%20Semestre/CADP/Estructura%20de%20Pascal/","title":"Estructura de Pascal","text":""},{"location":"1er%20Semestre/CADP/Estructura%20de%20Pascal/#estructura-general","title":"Estructura general","text":"<pre><code>program {name of the program}\nuses {comma delimited names of libraries you use}\nconst {global constant declaration block}\ntype {types varianle declaration block}\nvar {global variable declaration block}\nfunction {function declarations, if any}\n{ local variables }\nbegin\n...\nend;\nprocedure { procedure declarations, if any}\n{ local variables }\nbegin\n...\nend;\nvar {local variables}\nbegin { main program block starts}\n...\nend. { the end of main program block }\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructura%20de%20Pascal/#estructura-de-las-funciones","title":"Estructura de las funciones","text":"<pre><code>{function funName(var(s): type; var(s): type): returnType;}\nfunction func(var1: integer; var2, var3: char): boolean;\nvar {local var}\nvar4: real;\nbegin\n...\n{all functions have to end with the name of the function with  a declaration to de return type}\nfunc := true; end;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructura%20de%20Pascal/#estructura-de-los-procedimientos","title":"Estructura de los procedimientos","text":"<pre><code>{procedure procName(var(s): type; var(s): type);}\nprocedure proc(var1: integer; var2, var3: char);\nvar {local var}\nvar3: real;\nbegin\n...\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructuras%20de%20control/","title":"Estructuras de control","text":"<ol> <li>Decisi\u00f3n</li> <li>Repetici\u00f3n</li> <li>Iteraci\u00f3n (While)</li> <li>Iteraci\u00f3n (Repeat)</li> <li>Selecci\u00f3n</li> </ol>"},{"location":"1er%20Semestre/CADP/Estructuras%20de%20control/#decision","title":"Decisi\u00f3n","text":"<pre><code>if (boolean) then begin\n...\nend\nelse if (boolean) then begin\n...\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructuras%20de%20control/#repeticion","title":"Repetici\u00f3n","text":"<pre><code>for i := 1 to 10 do begin\n...\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructuras%20de%20control/#iteracion-while","title":"Iteraci\u00f3n (While)","text":"<pre><code>while (boolean) do begin\n...\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructuras%20de%20control/#iteracion-repeat","title":"Iteraci\u00f3n (Repeat)","text":"<pre><code>repeat\n...\nuntil (boolean)\n</code></pre>"},{"location":"1er%20Semestre/CADP/Estructuras%20de%20control/#seleccion","title":"Selecci\u00f3n","text":"<pre><code>case variable of\n1: begin\n...\nend;\n2: ...\n3..5: ...\nelse: ...\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Maximos%20y%20minimos/","title":"Maximos y minimos","text":"<p>Se usa una variable para seguir el rastro del actual maximo o minimo. La variable se tiene que inicializar al principio del programa. Maximos -&gt; Se inicializa en el menor valor posible Minimos -&gt; Se inicializa en el mayor valor posible</p> <p>Ej: Hacer un programa que obtenga el minimo y maximo valor ingresado. Se dejan de leer numeros cuando el numero ingresado sea el 0 (el cual no se tiene que procesar). Los numeros ingresados solo pueden ser entre el 0 y el 100.</p> <pre><code>program MaxMinEx;\ntype\nnum = -1..101;\nvar\nmax, min, value: num;\nbegin\nmax := -1;\nmin := 101;\nreadln(value);\nwhile (value &lt;&gt; 0) do begin\nif (value &gt; max) then\nmax := value;\nif (value &lt; min) then\nmax := value;\nreadln(value);\nend;\nwriteln('El minimo valor ingresado fue: ', min, ' y el maximo: ', max);\nend.\n</code></pre>"},{"location":"1er%20Semestre/CADP/Memoria/","title":"Memoria","text":"<p>La memoria de un programa consta de dos partes, la memoria est\u00e1tica y la memoria din\u00e1mica</p>"},{"location":"1er%20Semestre/CADP/Memoria/#memoria-estatica","title":"Memoria Est\u00e1tica","text":"<p>La memoria est\u00e1tica no se modifica durante el programa y se carga al inicializar el mismo, se usa para almacenar las variables globales, y locales del programa principal.</p>"},{"location":"1er%20Semestre/CADP/Memoria/#memoria-dinamica","title":"Memoria Din\u00e1mica","text":"<p>La memoria din\u00e1mica solo se puede acceder por medio de los Punteros. Esta memoria como su nombre indica es din\u00e1mica y puede cambiar durante el programa.</p> <p>[!info]- Mas informaci\u00f3n sobre memoria dinamica Leer Punteros para aprender a acceder y modificar la memoria dinamica de un programa</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Arrays%20-%20Vectores/","title":"Arrays: Vectores","text":"<p>Los Vectores o arrays de una dimension se utilizan para poder almacenar informacion, siempre y cuando sepas la cantidad de informacion que necesitas almacenar.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Arrays%20-%20Vectores/#definicion","title":"Definici\u00f3n","text":"<p>Los vectores se definen de la siguiente manera:</p> <pre><code>program vectores;\nconst\nN = 100;\ntype\nvector = array [1..N] of type;\nvar\nvec: vector;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Arrays%20-%20Vectores/#uso","title":"Uso","text":"<p>Los vectores, al igual que los Registros solo tienen una accion directa y es la asignacion entre si <code>vec := vec1;</code>. Para poder hacer operacion con sus valores hay que llamarlos, y se hace de la siguiente manera <code>vec[i]</code> siendo <code>i</code> el indice donde se encuentra la variable que queremos llamar.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Arrays%20-%20Vectores/#algoritmos-utiles-para-vectores","title":"Algoritmos utiles para vectores","text":""},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Arrays%20-%20Vectores/#cargar-vector","title":"Cargar vector","text":"<pre><code>procedure cargarVector(var v: vector; var dimL: integer);\nvar\nval: real;\nbegin\ndimL := 0;\nreadln(val);\nwhile(val &lt;&gt; 0) and (dimL &lt; cant_datos) do begin\ndimL := dimL + 1;\nv[dimL] := val;\nread(val);\nend;\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Arrays%20-%20Vectores/#recorrer-vector","title":"Recorrer vector","text":"<pre><code>procedure recorrerVector(v: vector, dimL: integer);\nvar\ni: integer;\nbegin\nfor i := 0 to dimL do begin\n// Hacer algo con v[i]\nv[i];\nend;\nend;\n</code></pre>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Punteros/","title":"Punteros","text":"<p>Los punteros son un tipo de dato usado solo para almacenar informaci\u00f3n en la memoria dinamica. </p> <p>El puntero como tal solo almacena una direccion de memoria dinamica a la cual luego se le puede asignar informacion.</p> <p>Los punteros tienen asignado un tipo, es decir a un puntero de string no le podes asignar un inteher ni viceversa, por eso se debe asignar un puntero por cada tipo variable que quieras almacenar en la memoria dinamica.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Punteros/#operaciones-con-punteros","title":"Operaciones con punteros","text":""},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Registros/","title":"Registros","text":"<p>Los registros se usan para almacenar informacion bajo una misma variable, algo asi como una clase.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Registros/#definicion","title":"Definici\u00f3n","text":"<p>Los registros se definen de la siguiente manera: <pre><code>program registros;\ntype\nnombre = record\ncampo1: type;\ncampo2: type;\nend;\nvar\nregistro: nombre;\n</code></pre></p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Registros/#uso","title":"Uso","text":"<p>Los registros solo tienen una accion, y es la asignacion total entre registros. Por fuera de eso el registro como tal no puede hacer nada, pero para ello podemos llamar a sus variables internas.</p> <p>Para llamar a una variable dentro del registro se utiliza la siguiente sintaxis <code>registro.campo1</code> Y eso es una variable como cualquier otra.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Tipos%20de%20datos/","title":"Tipos de datos","text":"<p>Hay dos tipos de datos principales, los Simples y los Compuestos Cada uno de los tipos pueden tener varias caracteristicas que a continuacion voy a explicar</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Tipos%20de%20datos/#caracteristicas","title":"Caracteristicas","text":""},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Tipos%20de%20datos/#ordinal","title":"Ordinal","text":"<p>Los tipos de datos ordinales son aquellos los cuales se puede saber el valor anterior al actual y el valor siguiente al actual. Por ejemplo: un entero, si el valor actual es 1 se sabe que el valor anterior es 0 y el siguiente es 2.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Tipos%20de%20datos/#simples","title":"Simples","text":"<p>Los tipos de datos simples solo pueden tener un valor asignado. Por ejemplo un int.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Tipos%20de%20datos/#compuestos","title":"Compuestos","text":"<p>Tienen mas de un valor asignado a la vez y los valores se relacionan entre si. Por ejemplo un hashmap.</p>"},{"location":"1er%20Semestre/CADP/Tipos%20de%20datos/Tipos%20de%20datos/#tipos-de-datos-en-pascal","title":"Tipos de datos en pascal","text":"Tipo de dato Declaracion Ordinal Tipo Ejemplo Entero integer Si Simple 1, 2, 3 Real real No Simple 1.1, 3.14 Booleano boolean Si Simple true / false Caracter char Si Simple 'a', 'b', '1', 'Z' String string No Compuesto 'Hola', '123' Subrango 1..10 Si Simple 1..3 = (1,2,3), 'a'..'c' = ('a', 'b', 'c') Registros record No Compuesto registro.campo1, registro.campo2 Arrays - Vectores array [length] of type Si Compuesto vector[1], vector[2]"},{"location":"1er%20Semestre/MAT1/Capitulo%201/Circunferencias/","title":"Circunferencias","text":""},{"location":"1er%20Semestre/MAT1/Capitulo%201/Distancia%20entre%20dos%20puntos/","title":"Distancia entre dos puntos","text":"<p>Para calcular la distancia entre 2 puntos se usa el teorema de pitagoras, ya que la distancia entre el punto \\(P_1(x_1,y_1)\\) y el punto \\(P_2(x_2,y_2)\\) es la medida de la hipotenusa del triangulo rectangulo que tiene vertices A</p>"},{"location":"1er%20Semestre/MAT1/Capitulo%201/Plano%20coordenado/","title":"Plano coordenado","text":"<p>El plano coordenado asi definidio se llama \\(\\mathbb{R}^2\\) y se lee \"R dos\", es un conjunto y se expresa  \\(\\mathbb{R}^2 = \\{(x,y): x \\in \\mathbb{R} \\: \\wedge y \\in \\mathbb{R}\\}\\) es decir, el conjunto de los pares ordenados donde cada componente es un n\u00famero real.</p>"},{"location":"1er%20Semestre/MAT1/Capitulo%201/Plano%20coordenado/#producto-cartesiano","title":"Producto cartesiano","text":"<p>El producto cartesiano es una ecuacion aplicable a los conjuntos. Se describe de la siguiente manera</p> <p>$$ \\begin{align} A &amp;= {1, 2, 3} \\  \\ A \\times A &amp;= {(x,y): x \\in A : \\wedge y \\in A} \\ &amp;= (1,1),(1,2),(1,3),(2,1)(2,2),(2,3)(3,1)(3,2)(3,3)</p> <p>\\end{align} $$ Siendo que el Plano coordenado#Plano coordenado es \\(\\mathbb{R}\\times\\mathbb{R} = \\mathbb{R}^2\\)</p>"},{"location":"1er%20Semestre/MAT1/Capitulo%206/Matrices/","title":"Matrices","text":"\\[ A_{n*m} X B_{m*p} = C_{n*p} \\]"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/","title":"Representar e interpretar entre los diferentes sistemas","text":""},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#indice","title":"Indice","text":"<ol> <li>Tabla de equivalencias</li> <li>Binario a Decimal</li> <li>Hexadecimal a Decimal</li> <li>Decimal a Binario<ol> <li>Parte Entera<ol> <li>Dividiendo</li> <li>Restando potencias de 2</li> </ol> </li> <li>Parte Decimal</li> </ol> </li> <li>Decimal a Hexadecimal</li> <li>Binario a Hexadecimal</li> <li>Hexadecimal a Binario</li> </ol>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#tabla-de-equivalencias","title":"Tabla de equivalencias","text":"Decimal Binario Hexadecimal 0<sub>10</sub> 0000<sub>2</sub> 0<sub>16</sub> 1<sub>10</sub> 0001<sub>2</sub> 1<sub>16</sub> 2<sub>10</sub> 0010<sub>2</sub> 2<sub>16</sub> 3<sub>10</sub> 0011<sub>2</sub> 3<sub>16</sub> 4<sub>10</sub> 0100<sub>2</sub> 4<sub>16</sub> 5<sub>10</sub> 0101<sub>2</sub> 5<sub>16</sub> 6<sub>10</sub> 0110<sub>2</sub> 6<sub>16</sub> 7<sub>10</sub> 0111<sub>2</sub> 7<sub>16</sub> 8<sub>10</sub> 1000<sub>2</sub> 8<sub>16</sub> 9<sub>10</sub> 1001<sub>2</sub> 9<sub>16</sub> 10<sub>10</sub> 1010<sub>2</sub> A<sub>16</sub> 11<sub>10</sub> 1011<sub>2</sub> B<sub>16</sub> 12<sub>10</sub> 1100<sub>2</sub> C<sub>16</sub> 13<sub>10</sub> 1101<sub>2</sub> D<sub>16</sub> 14<sub>10</sub> 1110<sub>2</sub> E<sub>16</sub> 15<sub>10</sub> 1111<sub>2</sub> F<sub>16</sub>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#binario-a-decimal","title":"Binario a Decimal","text":"<p>En este caso hay que usar el Teorema fundamental de la numeraci\u00f3n [ N=\\sum_{i=-d}<sup>nX_i*B</sup>i ]</p> <p>Por ejemplo: \\(10100101_2=1*2^7+0*2^6+1*2^5+0*2^4+0*2^3+1*2^2+0*2^1+1*2^0=165_{10}\\) \\(1011.011_2=1*2^3+0*2^2+1*2^1+1*2^0+0*2^{-1}+1*2^{-2}+1*2^{-3}=11.375_{10}\\)</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#hexadecimal-a-decimal","title":"Hexadecimal a Decimal","text":"<p>En este caso hay que usar el Teorema fundamental de la numeraci\u00f3n $$ N=\\sum_{i=-d}<sup>nX_i*B</sup>i $$ Por ejemplo: \\(9F7_{16}=9*16^2+15*16^1+7*16^0=2551_{10}\\) \\(10.2_{16}=1*16^1+0*16^0+2*16^{-1}=16.125_{10}\\)</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#decimal-a-binario","title":"Decimal a Binario","text":"<p>Para pasar un numero de decimal a binario la parte entera y la decimal se pasan de maneras diferentes</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#parte-entera","title":"Parte Entera","text":"<p>Hay 2 maneras de pasar la parte entera</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#dividiendo","title":"Dividiendo","text":"<p>En esta manera lo que ten\u00e9s que hacer es dividir la parte entera entre 2 hasta que el cociente sea 0 y se escriben los restos de atr\u00e1s para adelante.</p> <p>Ejemplo: </p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#restando-potencias-de-2","title":"Restando potencias de 2","text":"<p>Esta forma es mas simple, ten\u00e9s que restarle la potencia de 2 mas alta posible, el bit que de esa potencia va a ser 1.</p> <p>Ejemplo: \\(210_{10}=128+64+16+2=11010010_2\\)</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#parte-decimal","title":"Parte decimal","text":"<p>Para pasar la parte decimal es simple, ten\u00e9s que multiplicar la parte decimal por 2 hasta que la misma sea 0 o se empiece a repetir. Tenes que anotar la parte entera del resultado, una vez lo anotes volves a multiplicar la parte decimal por 2 otra vez.</p> <p>Ejemplo: \\(0.375_2=0.375*2=0.75*2=1.5*2=1.0\\) \\(0.375_{10}=0.011_2\\)</p> <p>%% TODO %%</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#decimal-a-hexadecimal","title":"Decimal a Hexadecimal","text":""},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#binario-a-hexadecimal","title":"Binario a Hexadecimal","text":"<p>En este caso hay que usar la tabla de Binario Codificado Hexadecimal que es la siguiente:</p> <p>Lo que hay que hacer es dividir el numero en binario en bloques de 4 d\u00edgitos, empezando de derecha a izquierda, si el ultimo bloque tiene menos de 4 d\u00edgitos se le suman 0 adelante. Una vez ten\u00e9s todos los bloques, lo buscas en la tabla y le pones el simbolo correspondiente.</p> <p>Ejemplo: 10100101<sub>2</sub> = A5<sub>16</sub></p> <p>%% TODO %%</p>"},{"location":"1er%20Semestre/OC/Representar%20e%20interpretar%20entre%20los%20diferentes%20sistemas/#hexadecimal-a-binario","title":"Hexadecimal a Binario","text":""},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion%20en%20binario/","title":"Sistemas de representaci\u00f3n en binario","text":"<p>Los sistemas de representaci\u00f3n se usan para representar n\u00fameros en el sistema binario.</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion%20en%20binario/#propiedades","title":"Propiedades","text":"<p>Todos los sistemas de representaci\u00f3n tienen las siguientes propiedades:</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion%20en%20binario/#rango","title":"Rango","text":"<p>El rango de un sistema es la diferencia entre el menor numero que se puede representar y el mayor numero. Es decir, la cantidad de n\u00fameros que podes representar en el sistema.</p> <p>Por ejemplo, en un sistema decimal donde hay un numero entero y 2 n\u00fameros decimales el rango seria el siguiente: 0,00 - 9,99 (1000)</p> <p>La formula para calcular el rango es: B<sup>n</sup></p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion%20en%20binario/#resolucion","title":"Resoluci\u00f3n","text":"<p>La resoluci\u00f3n de un sistema es la diferencia entre dos n\u00fameros consecutivos. Los \"saltos\" que da entre n\u00fameros.</p> <p>Siguiendo con el ejemplo de arriba, la resoluci\u00f3n seria 0,01.</p> <p>La formula para calcular la resoluci\u00f3n es: B<sup>d</sup>. Siendo <code>d</code> la posici\u00f3n del bit menos significativo</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion%20en%20binario/#error","title":"Error","text":"<p>El error es la diferencia en valor absoluto entre el numero que quiero representar y el que puedo representar en el sistema que se esta usando.</p> <p>Por ejemplo: si quiero representar el 1,2<sub>10</sub> en un sistema con 1 bit entero y 4 bits decimales quedar\u00eda: 1,0011<sub>2</sub> con un error del 0,0125<sub>10</sub> o, un error del 1,25%</p> <p>La formula para calcular el error es: \\(|x-x'|\\)</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion%20en%20binario/#sistemas","title":"Sistemas","text":"<p>La siguiente tabla muestra los distintos sistemas</p> <pre><code>table abreviatura as \"Abreviatura\", negativos as \"Puede representar negativos\", rango as \"Formula del Rango\", formula as \"Formula de traspaso\"\nfrom \"docs/1er Semestre/OC/Sistemas de representacion\" \nwhere isSystem = true\n</code></pre>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Codificado%20Decimal/","title":"Binario Codificado Decimal","text":""},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Codificado%20Decimal/#desempaquetado","title":"Desempaquetado","text":"<p>Se usa para comunicaciones entre perif\u00e9ricos Cada d\u00edgito ocupa un byte, se escribe <code>1111</code><sub>2</sub> adelante de cada d\u00edgito, el d\u00edgito se escribe en Binario Sin Signo</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Codificado%20Decimal/#sin-signo","title":"Sin Signo","text":"<p>834<sub>10</sub> = 11111000 11110011 11110100<sub>2</sub>             =       F8              F3              F4<sub>16</sub></p> <p>75<sub>10</sub> = 11110111 11110101<sub>2</sub>          =       F7             F5<sub>16</sub></p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Codificado%20Decimal/#con-signo","title":"Con Signo","text":"<p>Al ultimo d\u00edgito se le agrega el s\u00edmbolo adelante. + -&gt; C = 1100 - -&gt; D = 1101</p> <p>-834<sub>10</sub> = 11111000 11110011 11010100<sub>2</sub>                =       F8              F3              D4<sub>16</sub></p> <p>+69<sub>10</sub> = 11110110 11001001<sub>2</sub>             =      F6               C9<sub>16</sub></p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Codificado%20Decimal/#empaquetado","title":"Empaquetado","text":"<p>Se utiliza para hacer c\u00e1lculos Cada d\u00edgito ocupa solo 4 bits, se escribe sin el relleno</p> <p>El signo se agrega despues del ultimo numero, no pueden quedar bytes incompletos</p> <p>+834<sub>10</sub> = 1000 0011 0100 1100<sub>2</sub>             =       8         3        4         C<sub>16</sub></p> <p>+75<sub>10</sub> = 0000 0111 0101 1100<sub>2</sub>          =     0         7       5         C<sub>16</sub></p> <p>-834<sub>10</sub> = 1000 0011 0100 1101<sub>2</sub>                =    8         3        4        D<sub>16</sub></p> <p>-69<sub>10</sub> = 0000 0110 1001 1101<sub>2</sub>             =     0         6        9       D<sub>16</sub></p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Codificado%20Decimal/#suma-de-bcd","title":"Suma de BCD","text":"<p>Como en BCD solo se usan los d\u00edgitos del 0 al 9, nos quedan 6 combinaciones de bits sin usar. Es por esto que si la suma de 2 n\u00fameros en BCD da un numero mayor a 9<sub>10</sub> se le tiene que sumar 6<sub>10</sub> (0110<sub>2</sub>)</p> <p>Ejemplos:    15<sub>10</sub>  |     0001  0101<sub>2</sub> + 27<sub>10</sub>  | + 0010   0111<sub>2</sub> = 42<sub>10</sub>  | = 0011    1100<sub>2</sub>                        3<sub>10</sub>       12<sub>10</sub> -&gt; Se le suma 6<sub>10</sub> (0110<sub>2</sub>)</p> <p>     0011  1100<sub>2</sub> +  0000 0110<sub>2</sub> = 0100   0010<sub>2</sub>       4<sub>10</sub>       2<sub>10</sub></p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Con%20Signo/","title":"Binario Con Signo","text":"<p>Rango: \\([-(2^{n-1}-1)...+(2^{n-1}-1)]\\) Los negativos empiezan con 1 Los positivos empiezan con 0</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Con%20Signo/#como-representar-en-este-sistema","title":"Como representar en este sistema","text":"<p>Los positivos se representan igual que en el sistema Binario Sin Signo, los negativos por otro lado se escriben igual que Binario Sin Signo pero el bit mas significativo representa el signo, es decir se cambia por un 1.</p> <p>Ejemplo de 4 bits:</p> <p>Rango = [-7...7] Resoluci\u00f3n = 1</p> <p>\\(4_{10}=0100_{2\\ BCS}\\) \\(-4_{10}=1100_{2\\ BCS}\\)</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20Sin%20Signo/","title":"Binario Sin Signo","text":"<p>Rango: \\([0 ... +(2^{n-1})]\\)</p> <p>Ejemplo con 4 bits:</p> <p>Rango: [0...15] Resoluci\u00f3n: 1</p> <p>\\(4_{10}=0100_2=0*2^3+1*2^2+0*2^1+0*2^0\\)</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20con%20Punto%20Flotante/","title":"Binario con punto flotante","text":"<p>%%TODO: Terminar de tomar apuntes de esta clase%%</p> <p>El sistema de binario con punto flotante se usa para representar n\u00fameros muy grandes. Se usa la siguiente ecuaci\u00f3n:</p> \\[ \\color{lightgreen}M\\color{lightgray}*B\\color{red}^E \\] <p>Siendo la Mantisa (M), el Exponente (E) y la Base del sistema (B), en nuestro caso B es 2 ya que estamos usando sistema binario.</p> <p>A la hora de interpretar binarios escritos en este sistema siempre tenemos que saber cuantos bits hay en la Mantisa, cuantos en el Exponente y en que sistema estan representados cada uno.</p> <p>Ejemplo: 1101001 4 Bits de Mantisa representado en BSS y 3 bits de Exponente representado en BSS.</p> \\[\\begin{eqnarray} \\color{lightgreen}1101\\color{lightgray}*2\\color{red}^{001} &amp;=&amp; \\\\ \\color{lightgreen}13\\color{lightgray}*2\\color{red}^1 &amp;=&amp; \\\\ \\color{lightgreen}13\\color{lightgray}*2 &amp;=&amp; 26 \\end{eqnarray}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20con%20Punto%20Flotante/#mantisa-fraccionaria","title":"Mantisa fraccionaria","text":"<p>Cuando la mantisa es fraccionaria se le agrega un \\(\\color{cyan}0,\\) adelante de la mantisa, quedando la ecuaci\u00f3n final de esta manera:</p> \\[ \\color{cyan}0,\\color{lightgreen}M\\color{lightgray}*B\\color{red}^E \\] <p>Ejemplo: Sistema 5 bits de mantisa fraccionaria y 3 bits de exponente, ambos en BSS: 01010011</p> \\[\\begin{eqnarray} \\color{cyan}0,\\color{lightgreen}01010\\color{lightgray}*2\\color{red}^{011} &amp;=&amp; \\\\ \\color{lightgreen}0,3125\\color{lightgray}*2\\color{red}^3 &amp;=&amp; \\\\ \\color{lightgreen}0,3125\\color{lightgray}*8 &amp;=&amp; 2,5 \\end{eqnarray}\\] <p>Cuando el sistema tiene signo el bit del signo se saca de la mantisa y te quedas con los bits restantes.</p> <p>Ejemplos:</p> <ul> <li>1001101. 4 Bits Mantisa fraccionaria BCS, 3 exponente BCS</li> </ul> \\[\\begin{eqnarray} -\\color{cyan}0,\\color{lightgreen}001\\color{lightgray}*2\\color{red}^{101} &amp;=&amp; \\\\ -\\color{lightgreen}0,125\\color{lightgray}*2\\color{red}^{-1} &amp;=&amp; \\\\ -\\color{lightgreen}0,125\\color{lightgray}*0,5 &amp;=&amp; -0,0625 \\end{eqnarray}\\] <ul> <li>01011010. 4 Bits Mantisa Fraccionaria BCS, 4 exponente BSS</li> </ul> \\[\\begin{eqnarray} +\\color{cyan}0,\\color{lightgreen}101\\color{lightgray}*2\\color{red}^{1010} &amp;=&amp; \\\\ \\color{lightgreen}0,625\\color{lightgray}*2\\color{red}^{10} &amp;=&amp; \\\\ \\color{lightgreen}0,625\\color{lightgray}*1024 &amp;=&amp; 640 \\end{eqnarray}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20con%20Punto%20Flotante/#mantisa-fraccionaria-normalizada","title":"Mantisa fraccionaria normalizada","text":"<p>Ya que hay muchas maneras de poder representar un mismo numero con el sistema de Punto flotante se creo la Mantisa Fraccionaria normalizada, con esta representacion la mantisa siempre debe comenzar con \\(\\color{cyan}0,1\\), de no ser asi no se puede representar el numero.</p> <p>Se representa de la misma manera que la Mantisa Fraccionaria</p> <p>Ejemplos:</p> <ul> <li>1000101. 4 bits Mantisa fraccionaria normalizada BSS, 3 exponente BCS</li> </ul> \\[\\begin{eqnarray} \\color{cyan}0,1\\color{lightgreen}000\\color{lightgray}*2\\color{red}^{101} &amp;=&amp; \\\\ \\color{lightgreen}0,5\\color{lightgray}*2\\color{red}^{-1} &amp;=&amp; \\\\ \\color{lightgreen}0,5\\color{lightgray}*0,5 &amp;=&amp; 0,25 \\end{eqnarray}\\] <ul> <li>0101110. 4 bits mantisa fraccionaria normalizada BSS, 3 exponente Ca2.     No se puede representar ya que la mantisa no est\u00e1 normalizada.</li> <li>011100. 4 bits Mantisa fraccionaria normalizada BCS, 2 exponente BSS.</li> </ul> \\[\\begin{eqnarray} +\\color{cyan}0,1\\color{lightgreen}11\\color{lightgray}*2\\color{red}^{00} &amp;=&amp; \\\\ \\color{lightgreen}0,875\\color{lightgray}*2\\color{red}^{0} &amp;=&amp; \\\\ \\color{lightgreen}0,875\\color{lightgray}*1 &amp;=&amp; 0,875 \\end{eqnarray}\\] <p>Al primer bit ser el signo, la mantisa si comienza con 1 y se puede representar.</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20con%20Punto%20Flotante/#mantisa-fraccionaria-normalizada-c-bit-implicito","title":"Mantisa fraccionaria normalizada c/ bit implicito","text":"<p>Ya que todas las mantisas normalizadas comienzan con \\(\\color{cyan}0,1\\) no es necesario almacenar ese 1, ganando as\u00ed un bit mas en la mantisa. Con el bit impl\u00edcito la ecuaci\u00f3n final se modifica quedando as\u00ed de esta manera:  </p> \\[ \\color{cyan}0,1\\color{lightgreen}M\\color{lightgray}*B\\color{red}^2 \\] <p>Ahora todas las mantisas comienzan con \\(\\color{cyan}0,1\\) a\u00fan cuando la mantisa comienza por 0</p> <p>Ejemplo:</p> <ul> <li>1000101. 4 bits Mantisa fraccionaria normalizada con bit impl\u00edcito BSS, 3 exponente BCS</li> </ul> \\[\\begin{eqnarray} +\\color{cyan}0,1\\color{lightgreen}1000\\color{lightgray}*2\\color{red}^{101} &amp;=&amp; \\\\ \\color{lightgreen}0,75\\color{lightgray}*2\\color{red}^{-1} &amp;=&amp; \\\\ \\color{lightgreen}0,75\\color{lightgray}*0,5 &amp;=&amp; 0,375 \\end{eqnarray}\\] <ul> <li>01100. 2 bits Mantisa fraccionaria normalizada con bit impl\u00edcito BSS, 3 exponente BSS</li> </ul> \\[\\begin{eqnarray} +\\color{cyan}0,1\\color{lightgreen}01\\color{lightgray}*2\\color{red}^{100} &amp;=&amp; \\\\ \\color{lightgreen}0,625\\color{lightgray}*2\\color{red}^4 &amp;=&amp; \\\\ \\color{lightgreen}0,625\\color{lightgray}*16 &amp;=&amp; 10 \\end{eqnarray}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Binario%20con%20Punto%20Flotante/#rango","title":"Rango","text":"<p>Si mi sistema tiene N bits, se pueden representar \\(2^N\\) n\u00fameros. El rango va a ser [M\u00ednimo; M\u00e1ximo positivo] No se especifica que m\u00ednimo ya que hay sistemas donde no se pueden representar negativos. Se usa el m\u00ednimo mas m\u00ednimo que exista. </p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%201/","title":"Complemento a 1","text":"<p>Rango: \\([-(2^{n-1}-1)...+(2^{n-1}-1)]\\) Formula para pasar los numero: \\(Ca1 = (2^n-1)-N\\) Los negativos empiezan con 1 Los positivos empiezan con 0</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%201/#como-representar-en-este-sistema","title":"Como representar en este sistema","text":"<p>Los positivos se representan igual que en el sistema de Binario Sin Signo, por otro lado los negativos se representan dando vuelta los bits del numero positivo.</p> <p>Ejemplo con un sistema de 4 bits:</p> <p>\\(4_{10}=0100_{2\\ Ca1}\\) \\(-4_{10}=1011_{2\\ Ca1}\\)</p> <p>Siguiendo esta formula tambien podemos pasar los n\u00fameros: \\(\\(Ca1=(2^n-1)-N\\)\\) \\(Ca1 = (2^4-1)-(-4) = 7+4)\\) \\(0111_2 + 0100_2 = 1011_2\\)</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%201/#pasos-para-representar-negativos-en-ca1","title":"Pasos para representar negativos en Ca1","text":"<ol> <li>Representar el numero en Binario Sin Signo</li> <li>Dar vuelta todos los bits</li> </ol>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%202/","title":"Complemento a 2","text":"<p>Rango: \\([-(2^{n-1})...+(2^{n-1}-1)]\\) Formula para pasar los numero: \\(Ca2 = 2^n-N\\) Los negativos empiezan con 1 Los positivos empiezan con 0</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%202/#como-representar-en-este-sistema","title":"Como representar en este sistema","text":"<p>Los positivos se representan igual que en el sistema de Binario Sin Signo, por otro lado los negativos se representan pasandolo al sistema Complemento a 1 y sumandole 1<sub>10</sub> (0001<sub>2</sub>)</p> <p>Ejemplo con un sistema de 4 bits:</p> <p>\\(4_{10}=0100_{2\\ Ca2}\\) \\(-4_{10}=1100_{2\\ Ca2}\\)</p> <p>Siguiendo esta formula tambien podemos pasar los n\u00fameros: $\\(Ca2=2^n-N\\) $$ \\begin{eqnarray} Ca2 &amp;=&amp; 2^4-(-4) = 8+4 \\ 1100_2 &amp;=&amp; 1000_2 + 0100_2 \\end{eqnarray} $$</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%202/#pasos-para-representar-negativos-en-este-sistema","title":"Pasos para representar negativos en este sistema","text":"<ol> <li>Pasas el decimal a Binario Sin Signo</li> <li>Das vuelta todos los bits del numero</li> <li>Le sumas 1<sub>10</sub> (0001<sub>2</sub>) al numero</li> </ol> <p>Ejemplo: \\(\\(\\begin{eqnarray} -7_{10} &amp;=&amp; 0111_{2\\ BSS} \\\\ &amp;=&amp; 1000_{2\\ Ca1} \\\\ &amp;=&amp; 1001_{2\\ Ca2} \\end{eqnarray}\\)\\)</p>"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Complemento%20a%202/#otra-manera-de-representar-mas-facil","title":"Otra manera de representar mas f\u00e1cil","text":"<ol> <li>Pasas el decimal a Binario Sin Signo</li> <li>Escrib\u00eds los d\u00edgitos de derecha a izquierda hasta escribir el primer 1 que aparezca</li> <li>Das vuelta los d\u00edgitos restantes</li> </ol> \\[\\begin{eqnarray} -7_{10} &amp;=&amp; 0111_{2\\ BSS} \\\\ &amp;=&amp; \\color{aquamarine}---\\color{lightgreen}1 \\color{lightgray}\\text{ (Escribis hasta el primer 1)}\\\\ &amp;=&amp; \\color{aquamarine}100\\color{lightgreen}1\\color{lightgray}_{2\\ Ca2} \\text{ (Das vuelta el resto de bits)} \\end{eqnarray}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Exceso/","title":"Exceso","text":"<p>Rango: \\([-(2^{n-1})...+(2^{n-1}-1)]\\) Los negativos empiezan con 0 Los positivos empiezan con 1</p> <p>El exceso es una constante que tiene el valor del bit mas significativo. Es decir</p> \\[E=2^{n-1}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Exceso/#como-representar-en-este-sistema","title":"Como representar en este sistema","text":""},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Exceso/#binario-a-decimal","title":"Binario a Decimal","text":"<ol> <li>Se interpreta el numero en Binario Sin Signo</li> <li>Se le resta el Exceso</li> </ol> <p>Ejemplo:</p> \\[\\begin{eqnarray} 0100_{2\\ Ex2} &amp;=&amp; -4_{10} \\\\ \\\\ 0100_2 &amp;=&amp; 4_{10\\ BSS} \\\\ &amp;=&amp; 4 - 8 \\Rightarrow \\text{Exceso} \\\\ &amp;=&amp; -4 \\end{eqnarray}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Exceso/#decimal-a-binario","title":"Decimal a Binario","text":"<ol> <li>Se le suma el exceso</li> <li>El resultado se representa en Binario Sin Signo</li> </ol> <p>Ejemplo:</p> \\[\\begin{eqnarray} -7_{10} &amp;=&amp; 0001_{2\\ Ex2} \\\\ \\\\ -7_{10} &amp;\\rightarrow&amp; -7+8 \\Rightarrow \\text{Exceso} \\\\ &amp;=&amp; 1_{10} \\\\ &amp;=&amp; 0001_{2\\ BSS} \\end{eqnarray}\\]"},{"location":"1er%20Semestre/OC/Sistemas%20de%20representacion/Flags/","title":"Flags","text":"<p>Las ecuaciones en binario tienen flags que te indican el estado del resultado. Las flags son las siguientes:</p> <ul> <li> <p>Z (Cero): Vale 1 si y solo si el resultado es 0.</p> </li> <li> <p>C (Carry): En una suma vale 1 si me falta un bit para representar el resultado. Carry al bit mas significativo.   En la resta vale 1 si hay \"Borrow\" hacia el bit mas significativo. Si le pedis prestado a un bit que no existe.</p> </li> <li> <p>N (Negativo): Vale lo mismo que el bit mas significativo</p> </li> <li> <p>V (Overflow): Vale 1 solo si: una suma de positivos da negativo, una suma de negativos da positivo, un negativo menos un positivo da positivo o si un positivo menos un negativo da negativo</p> </li> </ul> \\[\\begin{aligned} +_1++_2=-||-_1+-_2=+ \\\\ -_1-+_1=+||+_1--_1=- \\end{aligned}\\] <p>Ejemplo de ecuaciones con sus respectivas flags:</p> <p>1001 |       9          C = 1, Z = 0, N = 0, V = 1 + 1100 | + 12 = 0101 | = 5</p> <p>0101  |    5         C = 0, Z = 0, N = 0, V = 0 - 0100 | - 4 = 0001 | = 1</p>"}]}